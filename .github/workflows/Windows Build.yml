name: Windows Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        BUILD_TYPE: [Debug]
    
    steps:
    - name : Checkout
      uses: actions/checkout@v2
    
    - name: Python setup
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'
        
    - name: Get prerequisites
      run: python -m pip install cmake conan

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'
        host: 'windows'
        target: 'desktop'
        dir: '${{ github.workspace }}'
        install-deps: 'true'
        setup-python: 'false'
        set-env: 'true'
        tools-only: 'false'

    - name: Cache Conan packages
      id: conan-cache
      uses: actions/cache@v2
      with:
        path: 'C:\Users\runneradmin\.conan'
        key: ${{ runner.os }}${{matrix.BUILD_TYPE}}-conan
        restore-keys: ${{ runner.os }}${{matrix.BUILD_TYPE}}-conan
      
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.BUILD_TYPE}}
      

name: Windows Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: '${{ runner.workspace }}/vcpkg'
          vcpkgGitCommitId: 'latest'
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: Install Qt6
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.3'
          host: 'windows'
          arch: 'win64_msvc2019_64'
          modules: 'qtbase'
          target: 'desktop'
          dir: '${{ github.workspace }}'
          install-deps: 'true'
          setup-python: 'false'
          set-env: 'true'
          tools-only: 'false'

      - name: Configure CMake
        run: >
          cmake -S . -B build
          -G "Ninja"
          -DCMAKE_TOOLCHAIN_FILE=${{ runner.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_COMPILER="cl.exe"

      - name: Build Project
        run: cmake --build build --config Release
